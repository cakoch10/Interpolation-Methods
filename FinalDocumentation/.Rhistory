tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
LoessErrorTraj2 <- df
#Visualize Total Error
library(ggplot2)
df <- data.frame(NNerrorTS2$x, NNerrorTS2$y, NNerrorTraj2$y, CubicErrorTraj2$y, CubicTSError2$y, LinerrorTS2$y, LinerrorTraj2$y, LoessErrorTraj2$y)
ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5)
names <- read.delim("C:/test/trajectory2/names.txt", header=FALSE)
View(names)
names <- names[order(names$V2),]
View(names)
names
colnames(names) <- c("File", "Size (KB)")
names
library(printr)
install.packages(printr)
library(printr)
library(knitr)
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
library(printr)
?options()
names <- read.delim("C:/test/trajectory2/names.txt", header=FALSE)
names <- names[order(names$V2),]
colnames(names) <- c("File", "Size (KB)")
rownames(names) <- seq(length=nrow(names))
names
detach("package:printr", unload=TRUE)
head(names)
print(names)
print(names, right = FALSE)
install.packages("plotly")
library(plotly)
library(ggplot2)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5)
ggplotly(g)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
library(ggplot2)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
g
library(plotly)
ggplotly(g)
)
library(plotly)
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue")
)
ggplotly(g) + layout(xaxis = a, yaxis = a)
ggplotly(g) %>% layout(xaxis = a, yaxis = a)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(vjust=0.1))
library(plotly)
ggplotly(g)
g
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(vjust=0.5))
g
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(margin=margin(0,20,0,0)))
g
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(margin=margin(0,40,0,0)))
g
ggplotly(g)
View(NNerrorTS2
)
View(LoessErrorTraj2)
LoessErrorTraj2$y <- LoessErrorTraj2$y / 100
#Visualize Total Error
View(LoessErrorTraj2)
LoessErrorTraj2$y <- LoessErrorTraj2$y / 100
LinerrorTraj2$y <- LinerrorTraj2$y / 100
LinerrorTS2$y <- LinerrorTS2$y / 100
CubicTSError2$y <- CubicTSError2$y / 100
CubicErrorTraj2$y <- CubicErrorTraj2$y / 100
NNerrorTraj2$y <- NNerrorTraj2$y / 100
NNerrorTS2$y <- NNerrorTS2$y / 100
#Visualize Total Error
library(ggplot2)
df <- data.frame(NNerrorTS2$x, NNerrorTS2$y, NNerrorTraj2$y, CubicErrorTraj2$y, CubicTSError2$y, LinerrorTS2$y, LinerrorTraj2$y, LoessErrorTraj2$y)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(margin=margin(0,40,0,0)))
library(plotly)
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue")
)
ggplotly(g)
g
CubicErrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/CubicErrorTraj.plt", header=FALSE)
colnames(CubicErrorTraj) <- c("file", "error", "errorSquared", "length")
LinerrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/LinerrorTraj.plt", header=FALSE)
colnames(LinerrorTraj) <- c("file", "error", "errorSquared", "length")
NNerrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/NNerrorTraj.plt", header=FALSE)
colnames(NNerrorTraj) <- c("file", "error", "errorSquared", "length")
CubicTSError <- read.csv("C:/test/trajectory2/Error_Analysis/CubicTSError.plt", header=FALSE)
colnames(CubicTSError) <- c("file", "error", "errorSquared", "length")
LinerrorTS <- read.csv("C:/test/trajectory2/Error_Analysis/LinerrorTS.plt", header=FALSE)
colnames(LinerrorTS) <- c("file", "error", "errorSquared", "length")
NNerrorTS <- read.csv("C:/test/trajectory2/Error_Analysis/NNerrorTS.plt", header=FALSE)
colnames(NNerrorTS) <- c("file", "error", "errorSquared", "length")
totalDistance <- read.csv("C:/test/trajectory2/Error_Analysis/totalDistance.plt", header=FALSE)
colnames(totalDistance) <- c("trajectory", "timeSeries", "file")
LoessErrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/LoessErrorTraj.plt", header = FALSE)
colnames(LoessErrorTraj) <- c("file", "error", "errorSquared", "length")
LinerrorTS <- lapply(LinerrorTS, function(x){
gsub("_TS", "", x)
})
NNerrorTS <- lapply(NNerrorTS, function(x){
gsub("_TS", "", x)
})
LinerrorTraj <- lapply(LinerrorTraj, function(x){
gsub("_LinInt_Traj.plt", "", x)
})
# Format CubicErrorTraj
CubicErrorTraj <- lapply(CubicErrorTraj, function(x){
sub("_", "@", x)
})
test <- data.frame(do.call('rbind', strsplit(as.character(CubicErrorTraj$file),'_',fixed = TRUE)))
test <- lapply(test, function(x){
sub("@", "_", x)
})
CubicErrorTraj$file <- test$X1
# Format LoessErrorTraj -----------------------------------------------------------
LoessErrorTraj <- lapply(LoessErrorTraj, function(x){
sub("_", "@", x)
})
test <- data.frame(do.call('rbind', strsplit(as.character(LoessErrorTraj$file),'_',fixed = TRUE)))
test <- lapply(test, function(x){
sub("@", "_", x)
})
LoessErrorTraj$file <- test$X1
# Format CubicTSError
CubicTSError <- lapply(CubicTSError, function(x){
sub("_", "@", x)
})
CubicTSError <- lapply(CubicTSError, function(x){
sub("_", "@", x)
})
test <- data.frame(do.call('rbind', strsplit(as.character(CubicTSError$file),'_',fixed = TRUE)))
test <- lapply(test, function(x){
sub("@TS@", "_", x)
})
CubicTSError$file <- test$X1
# Merge Files
NNerrorTS <- merge(totalDistance, NNerrorTS, by.x = "file", by.y = "file")
NNerrorTraj <- merge(totalDistance, NNerrorTraj, by.x = "file", by.y = "file")
CubicTSError <- merge(totalDistance, CubicTSError, by.x = "file", by.y = "file")
CubicErrorTraj <- merge(totalDistance, CubicErrorTraj, by.x = "file", by.y = "file")
LinerrorTraj <- merge(totalDistance, LinerrorTraj, by.x = "file", by.y = "file")
LinerrorTS <- merge(totalDistance, LinerrorTS, by.x = "file", by.y = "file")
LoessErrorTraj <- merge(totalDistance, LoessErrorTraj, by.x = "file", by.y = "file")
# Add Gap Lengths
test <- data.frame(do.call('rbind', strsplit(as.character(NNerrorTS$file),'_',fixed = TRUE)))
NNerrorTS$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(NNerrorTraj$file),'_',fixed = TRUE)))
NNerrorTraj$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(CubicTSError$file),'_',fixed = TRUE)))
CubicTSError$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(CubicErrorTraj$file),'_',fixed = TRUE)))
CubicErrorTraj$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(LinerrorTraj$file),'_',fixed = TRUE)))
LinerrorTraj$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(LinerrorTS$file),'_',fixed = TRUE)))
LinerrorTS$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(LoessErrorTraj$file),'_',fixed = TRUE)))
LoessErrorTraj$Gaps <- test$X2
# Add inaccuracy
NNerrorTS$error <- as.numeric(as.character(NNerrorTS$error))
NNerrorTraj$error <- as.numeric(as.character(NNerrorTraj$error))
CubicTSError$error <- as.numeric(as.character(CubicTSError$error))
CubicErrorTraj$error <- as.numeric(as.character(CubicErrorTraj$error))
LinerrorTraj$error <- as.numeric(as.character(LinerrorTraj$error))
LinerrorTS$error <- as.numeric(as.character(LinerrorTS$error))
LoessErrorTraj$error <- as.numeric(as.character(LoessErrorTraj$error))
NNerrorTS$timeSeries <- as.numeric(as.character(NNerrorTS$timeSeries))
CubicTSError$timeSeries <- as.numeric(as.character(CubicTSError$timeSeries))
LinerrorTS$timeSeries <- as.numeric(as.character(LinerrorTS$timeSeries))
NNerrorTraj$trajectory <- as.numeric(as.character(NNerrorTraj$trajectory))
CubicErrorTraj$trajectory <- as.numeric(as.character(CubicErrorTraj$trajectory))
LinerrorTraj$trajectory <- as.numeric(as.character(LinerrorTraj$trajectory))
LoessErrorTraj$trajectory <- as.numeric(as.character(LoessErrorTraj$trajectory))
NNerrorTS$Inaccuracy <- NNerrorTS$error / NNerrorTS$timeSeries
CubicTSError$Inaccuracy <- CubicTSError$error / CubicTSError$timeSeries
LinerrorTS$Inaccuracy <- LinerrorTS$error / LinerrorTS$timeSeries
NNerrorTraj$Inaccuracy <- NNerrorTraj$error / NNerrorTraj$trajectory
CubicErrorTraj$Inaccuracy <- CubicErrorTraj$error / CubicErrorTraj$trajectory
LinerrorTraj$Inaccuracy <- LinerrorTraj$error / LinerrorTraj$trajectory
LoessErrorTraj$Inaccuracy <- LoessErrorTraj$error / LoessErrorTraj$trajectory
# Convert Gaps to numeric
NNerrorTS$Gaps <- as.numeric(as.character(NNerrorTS$Gaps))
NNerrorTraj$Gaps <- as.numeric(as.character(NNerrorTraj$Gaps))
CubicTSError$Gaps <- as.numeric(as.character(CubicTSError$Gaps))
CubicErrorTraj$Gaps <- as.numeric(as.character(CubicErrorTraj$Gaps))
LinerrorTraj$Gaps <- as.numeric(as.character(LinerrorTraj$Gaps))
LinerrorTS$Gaps <- as.numeric(as.character(LinerrorTS$Gaps))
LoessErrorTraj$Gaps <- as.numeric(as.character(LoessErrorTraj$Gaps))
# Get average of inaccuracies
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(NNerrorTS, NNerrorTS$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
NNerrorTS2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(NNerrorTraj, NNerrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
NNerrorTraj2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(CubicTSError, CubicTSError$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
CubicTSError2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(CubicErrorTraj, CubicErrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
CubicErrorTraj2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(LinerrorTraj, LinerrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
LinerrorTraj2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(LinerrorTS, LinerrorTS$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
LinerrorTS2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(LoessErrorTraj, LoessErrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
LoessErrorTraj2 <- df
# Scale inaccuracy (so it appears better on the plot0)
LoessErrorTraj2$y <- LoessErrorTraj2$y / 100
LinerrorTraj2$y <- LinerrorTraj2$y / 100
LinerrorTS2$y <- LinerrorTS2$y / 100
CubicTSError2$y <- CubicTSError2$y / 100
CubicErrorTraj2$y <- CubicErrorTraj2$y / 100
NNerrorTraj2$y <- NNerrorTraj2$y / 100
NNerrorTS2$y <- NNerrorTS2$y / 100
#Visualize Total Error
library(ggplot2)
df <- data.frame(NNerrorTS2$x, NNerrorTS2$y, NNerrorTraj2$y, CubicErrorTraj2$y, CubicTSError2$y, LinerrorTS2$y, LinerrorTraj2$y, LoessErrorTraj2$y)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + theme(axis.title.y=element_text(margin=margin(0,40,0,0)))
library(plotly)
ggplotly(g)
g2 <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy (hundreds)") + ggtitle("Comparing Inaccuracy (without Cubic Trajectory)")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=0.5) + geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=0.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=0.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=0.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=0.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#C49A00", data=LinerrorTraj2, size=0) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#00B6EB", data=NNerrorTraj2, size=0) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#F8766D", data = CubicTSError2, size = 0) + ggtitle("Results Excluding Outliers")
library(plotly)
ggplotly(g2)
g2
library(ggplot2)
df <- data.frame(NNerrorTS2$x, NNerrorTS2$y, NNerrorTraj2$y, CubicErrorTraj2$y, CubicTSError2$y, LinerrorTS2$y, LinerrorTraj2$y, LoessErrorTraj2$y)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy (hundreds)") + ggtitle("Comparing Inaccuracy (without Cubic Trajectory)")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=0.5) + geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=0.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=0.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=0.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=0.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#C49A00", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#00B6EB", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#F8766D", data = CubicTSError2, size = 0.5) + ggtitle("Results Excluding Outliers")
library(plotly)
ggplotly(g)
CubicErrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/CubicErrorTraj.plt", header=FALSE)
colnames(CubicErrorTraj) <- c("file", "error", "errorSquared", "length")
LinerrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/LinerrorTraj.plt", header=FALSE)
colnames(LinerrorTraj) <- c("file", "error", "errorSquared", "length")
NNerrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/NNerrorTraj.plt", header=FALSE)
colnames(NNerrorTraj) <- c("file", "error", "errorSquared", "length")
CubicTSError <- read.csv("C:/test/trajectory2/Error_Analysis/CubicTSError.plt", header=FALSE)
colnames(CubicTSError) <- c("file", "error", "errorSquared", "length")
LinerrorTS <- read.csv("C:/test/trajectory2/Error_Analysis/LinerrorTS.plt", header=FALSE)
colnames(LinerrorTS) <- c("file", "error", "errorSquared", "length")
NNerrorTS <- read.csv("C:/test/trajectory2/Error_Analysis/NNerrorTS.plt", header=FALSE)
colnames(NNerrorTS) <- c("file", "error", "errorSquared", "length")
totalDistance <- read.csv("C:/test/trajectory2/Error_Analysis/totalDistance.plt", header=FALSE)
colnames(totalDistance) <- c("trajectory", "timeSeries", "file")
LoessErrorTraj <- read.csv("C:/test/trajectory2/Error_Analysis/LoessErrorTraj.plt", header = FALSE)
colnames(LoessErrorTraj) <- c("file", "error", "errorSquared", "length")
LinerrorTS <- lapply(LinerrorTS, function(x){
gsub("_TS", "", x)
})
NNerrorTS <- lapply(NNerrorTS, function(x){
gsub("_TS", "", x)
})
LinerrorTraj <- lapply(LinerrorTraj, function(x){
gsub("_LinInt_Traj.plt", "", x)
})
# Format CubicErrorTraj
CubicErrorTraj <- lapply(CubicErrorTraj, function(x){
sub("_", "@", x)
})
test <- data.frame(do.call('rbind', strsplit(as.character(CubicErrorTraj$file),'_',fixed = TRUE)))
test <- lapply(test, function(x){
sub("@", "_", x)
})
CubicErrorTraj$file <- test$X1
# Format LoessErrorTraj -----------------------------------------------------------
LoessErrorTraj <- lapply(LoessErrorTraj, function(x){
sub("_", "@", x)
})
test <- data.frame(do.call('rbind', strsplit(as.character(LoessErrorTraj$file),'_',fixed = TRUE)))
test <- lapply(test, function(x){
sub("@", "_", x)
})
LoessErrorTraj$file <- test$X1
# Format CubicTSError
CubicTSError <- lapply(CubicTSError, function(x){
sub("_", "@", x)
})
CubicTSError <- lapply(CubicTSError, function(x){
sub("_", "@", x)
})
test <- data.frame(do.call('rbind', strsplit(as.character(CubicTSError$file),'_',fixed = TRUE)))
test <- lapply(test, function(x){
sub("@TS@", "_", x)
})
CubicTSError$file <- test$X1
# Merge Files
NNerrorTS <- merge(totalDistance, NNerrorTS, by.x = "file", by.y = "file")
NNerrorTraj <- merge(totalDistance, NNerrorTraj, by.x = "file", by.y = "file")
CubicTSError <- merge(totalDistance, CubicTSError, by.x = "file", by.y = "file")
CubicErrorTraj <- merge(totalDistance, CubicErrorTraj, by.x = "file", by.y = "file")
LinerrorTraj <- merge(totalDistance, LinerrorTraj, by.x = "file", by.y = "file")
LinerrorTS <- merge(totalDistance, LinerrorTS, by.x = "file", by.y = "file")
LoessErrorTraj <- merge(totalDistance, LoessErrorTraj, by.x = "file", by.y = "file")
# Add Gap Lengths
test <- data.frame(do.call('rbind', strsplit(as.character(NNerrorTS$file),'_',fixed = TRUE)))
NNerrorTS$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(NNerrorTraj$file),'_',fixed = TRUE)))
NNerrorTraj$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(CubicTSError$file),'_',fixed = TRUE)))
CubicTSError$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(CubicErrorTraj$file),'_',fixed = TRUE)))
CubicErrorTraj$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(LinerrorTraj$file),'_',fixed = TRUE)))
LinerrorTraj$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(LinerrorTS$file),'_',fixed = TRUE)))
LinerrorTS$Gaps <- test$X2
test <- data.frame(do.call('rbind', strsplit(as.character(LoessErrorTraj$file),'_',fixed = TRUE)))
LoessErrorTraj$Gaps <- test$X2
# Add inaccuracy
NNerrorTS$error <- as.numeric(as.character(NNerrorTS$error))
NNerrorTraj$error <- as.numeric(as.character(NNerrorTraj$error))
CubicTSError$error <- as.numeric(as.character(CubicTSError$error))
CubicErrorTraj$error <- as.numeric(as.character(CubicErrorTraj$error))
LinerrorTraj$error <- as.numeric(as.character(LinerrorTraj$error))
LinerrorTS$error <- as.numeric(as.character(LinerrorTS$error))
LoessErrorTraj$error <- as.numeric(as.character(LoessErrorTraj$error))
NNerrorTS$timeSeries <- as.numeric(as.character(NNerrorTS$timeSeries))
CubicTSError$timeSeries <- as.numeric(as.character(CubicTSError$timeSeries))
LinerrorTS$timeSeries <- as.numeric(as.character(LinerrorTS$timeSeries))
NNerrorTraj$trajectory <- as.numeric(as.character(NNerrorTraj$trajectory))
CubicErrorTraj$trajectory <- as.numeric(as.character(CubicErrorTraj$trajectory))
LinerrorTraj$trajectory <- as.numeric(as.character(LinerrorTraj$trajectory))
LoessErrorTraj$trajectory <- as.numeric(as.character(LoessErrorTraj$trajectory))
NNerrorTS$Inaccuracy <- NNerrorTS$error / NNerrorTS$timeSeries
CubicTSError$Inaccuracy <- CubicTSError$error / CubicTSError$timeSeries
LinerrorTS$Inaccuracy <- LinerrorTS$error / LinerrorTS$timeSeries
NNerrorTraj$Inaccuracy <- NNerrorTraj$error / NNerrorTraj$trajectory
CubicErrorTraj$Inaccuracy <- CubicErrorTraj$error / CubicErrorTraj$trajectory
LinerrorTraj$Inaccuracy <- LinerrorTraj$error / LinerrorTraj$trajectory
LoessErrorTraj$Inaccuracy <- LoessErrorTraj$error / LoessErrorTraj$trajectory
# Convert Gaps to numeric
NNerrorTS$Gaps <- as.numeric(as.character(NNerrorTS$Gaps))
NNerrorTraj$Gaps <- as.numeric(as.character(NNerrorTraj$Gaps))
CubicTSError$Gaps <- as.numeric(as.character(CubicTSError$Gaps))
CubicErrorTraj$Gaps <- as.numeric(as.character(CubicErrorTraj$Gaps))
LinerrorTraj$Gaps <- as.numeric(as.character(LinerrorTraj$Gaps))
LinerrorTS$Gaps <- as.numeric(as.character(LinerrorTS$Gaps))
LoessErrorTraj$Gaps <- as.numeric(as.character(LoessErrorTraj$Gaps))
# Get average of inaccuracies
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(NNerrorTS, NNerrorTS$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
NNerrorTS2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(NNerrorTraj, NNerrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
NNerrorTraj2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(CubicTSError, CubicTSError$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
CubicTSError2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(CubicErrorTraj, CubicErrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
CubicErrorTraj2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(LinerrorTraj, LinerrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
LinerrorTraj2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(LinerrorTS, LinerrorTS$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
LinerrorTS2 <- df
x <- c(seq(from = 50, to = 2000, by = 50))
y <- x+2000
df <- data.frame(x, y)
for(i in seq(from = 50, to = 2000, by = 50)){
test2 <- subset(LoessErrorTraj, LoessErrorTraj$Gaps==i)
tempVal <- i+2000
df[df==tempVal] <- mean(test2$Inaccuracy)
}
LoessErrorTraj2 <- df
# Scale inaccuracy (so it appears better on the plot0)
LoessErrorTraj2$y <- LoessErrorTraj2$y / 100
LinerrorTraj2$y <- LinerrorTraj2$y / 100
LinerrorTS2$y <- LinerrorTS2$y / 100
CubicTSError2$y <- CubicTSError2$y / 100
CubicErrorTraj2$y <- CubicErrorTraj2$y / 100
NNerrorTraj2$y <- NNerrorTraj2$y / 100
NNerrorTS2$y <- NNerrorTS2$y / 100
library(ggplot2)
df <- data.frame(NNerrorTS2$x, NNerrorTS2$y, NNerrorTraj2$y, CubicTSError2$y, LinerrorTS2$y, LinerrorTraj2$y)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy (hundreds)") + ggtitle("Comparing Inaccuracy (without Cubic Trajectory)")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=0.5) + geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=0.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=0.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=0.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=0.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#C49A00", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#00B6EB", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#F8766D", data = CubicTSError2, size = 0.5) + ggtitle("Results Excluding Outliers")
library(plotly)
ggplotly(g)
g <- ggplot(df, aes(NNerrorTS2$x, y=value, color=Method)) + labs(x="Gap Length", y="Inaccuracy (hundreds)")  + geom_point(aes(y=LinerrorTraj2$y, col="Linear (Trajectory)"), size=1.5) +geom_point(aes(y=CubicErrorTraj2$y,col="Cubic (Trajectory)"), size=1.5)+ geom_point(aes(y=NNerrorTraj2$y,col="N. Neighbor (Trajectory)"), size=1.5) + geom_point(aes(y=LinerrorTS2$y, col="Linear (TS)"), size=1.5) + geom_point(aes(y=NNerrorTS2$y,col="N. Neighbor (TS)"), size=1.5) + geom_point(aes(y=CubicTSError2$y,col="Cubic (TS)"), size=1.5) + geom_point(aes(y=LoessErrorTraj2$y,col="LOESS (Trajectory)"), size=1.5) + geom_line(aes(x = LinerrorTraj2$x, y = LinerrorTraj2$y), color="#53B400", data=LinerrorTraj2, size=0.5) + geom_line(aes(x = NNerrorTraj2$x, y = NNerrorTraj2$y), color="#A58AFF", data=NNerrorTraj2, size=0.5) + geom_line(aes(x = LinerrorTS2$x, y = LinerrorTS2$y), color="#00C094", data=LinerrorTS2, size=0.5) + geom_line(aes(x = NNerrorTS2$x, y = NNerrorTS2$y), color="#FB61D7", data=NNerrorTS2, size=0.5) + geom_line(aes(x = CubicTSError2$x, y = CubicTSError2$y), color="#C49A00", data = CubicTSError2, size = 0.5) + geom_line(aes(x = CubicErrorTraj2$x, y = CubicErrorTraj2$y), color="#F8766D", data = CubicErrorTraj2, size = 0.5) + geom_line(aes(x = LoessErrorTraj2$x, y = LoessErrorTraj2$y), color="#00B6EB", data = LoessErrorTraj2, size = 0.5) + ggtitle("Inaccuracy of Interpolation Methods")
library(plotly)
ggplotly(g)
df <- data.frame(
Method = factor(c("Linear (TS)", "Linear (Trajectory)", "Cubic (TS)", "Cubic (Trajectory)", "N. Neighbor (TS)", "N. Neighbor (Trajectory)", "LOESS (Trajectory)")), levels=c("Linear (TS)", "Linear (Trajectory)", "Cubic (TS)", "Cubic (Trajectory)", "N. Neighbor (TS)", "N. Neighbor (Trajectory)", "LOESS (Trajectory)"),
Inaccuracy = c(sum(LinerrorTS2$y), sum(LinerrorTraj2$y), sum(CubicTSError2$y), sum(CubicErrorTraj2$y), sum(NNerrorTS2$y), sum(NNerrorTraj2$y), sum(LoessErrorTraj2$y))
)
df <- data.frame(
Method = factor(c("Linear (TS)", "Linear (Trajectory)", "Cubic (TS)", "Cubic (Trajectory)", "N. Neighbor (TS)", "N. Neighbor (Trajectory)", "LOESS (Trajectory)")), levels=c("Linear (TS)", "Linear (Trajectory)", "Cubic (TS)", "Cubic (Trajectory)", "N. Neighbor (TS)", "N. Neighbor (Trajectory)", "LOESS (Trajectory)"),
Inaccuracy = c(sum(LinerrorTS2$y), sum(LinerrorTraj2$y), sum(CubicTSError2$y), sum(CubicErrorTraj2$y), sum(NNerrorTS2$y), sum(NNerrorTraj2$y), sum(LoessErrorTraj2$y))
)
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity")
df <- data.frame(
Method = factor(c("Linear (TS)", "Cubic (TS)", "N. Neighbor (TS)")), levels=c("Linear (TS)", "Cubic (TS)", "N. Neighbor (TS)"),
Inaccuracy = c(sum(LinerrorTS2$y), sum(CubicTSError2$y), sum(NNerrorTS2$y))
)
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity")
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity") + geom_errorbar()
df <- data.frame(
Method = factor(c("Linear (TS)", "Cubic (TS)", "N. Neighbor (TS)")), levels=c("Linear (TS)", "Cubic (TS)", "N. Neighbor (TS)"),
Inaccuracy = c(mean(LinerrorTS$Inaccuracy), mean(CubicTSError$Inaccuracy), mean(NNerrorTS$Inaccuracy))
)
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity") + geom_errorbar()
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity")
View(df)
df$se <- c(sd(LinerrorTS$Inaccuracy) / length(LinerrorTS$Inaccuracy), sd(CubicTSError$Inaccuracy) / length(CubicTSError$Inaccuracy), sd(NNerrorTS$Inaccuracy) / length(NNerrorTS$Inaccuracy))
View(df)
limits <- aes(ymax = df$Inaccuracy + df$se, ymin = df$Inaccuracy - df$se)
dodge <- position_dodge(width = 0.9)
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity") + geom_errorbar(limits, position = dodge, width=0.25)
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity") + geom_errorbar(limits)
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity") + geom_errorbar(limits) + ggtitle("Inaccuracy of Interpolation Methods") + labs(y="Inaccuracy (hundreds)")
ggplot(data = df, aes(x=Method, y=Inaccuracy, fill=Method)) + geom_bar(stat = "identity") + geom_errorbar(limits) + ggtitle("Three Most Accurate Interpolation Methods") + labs(y="Inaccuracy (hundreds)") + geom_text(aes(label=Inaccuracy), position=position_dodge(width=0.9), vjust=-0.25)
